{"version":3,"sources":["pages/App/App.js","components/Heading/Heading.js","components/TacoList/TacoList.js","pages/Landing/Landing.js","pages/TacoDetails/TacoDetails.js","pages/Deploy/Deploy.js","pages/Share/Share.js","pages/About/About.js","routes.js","pages/Config/Config.js","router.js","registerServiceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Helmet","charSet","this","props","children","Component","Heading","Link","to","TacoItem","_ref","name","id","class","concat","TacoList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","items","_this2","fetch","then","res","json","result","setState","tacos","_this$state","message","map","_ref2","TacoList_TacoItem","key","Landing","type","placeholder","aria-label","aria-describedby","components_TacoList_TacoList","fakeData","contents","doc","TacoDetails","match","params","console","log","description","version","tags","authors","ingredients","join","length","withRouter","Deploy","deploying","deployMsg","deploy","_callee","response","body","regenerator_default","wrap","_context","prev","next","process","method","headers","Content-Type","JSON","stringify","post","morestuff","sent","stop","onClick","disabled","role","href","About","routes","path","component","exact","Share","Config","onSubmit","handleInputChange","event","_this$setState","target","value","checked","cookie","Cookies","get","parse","newCookieVal","objectSpread","defineProperty","set","onTestConnection","asyncToGenerator","mark","config","preventDefault","_x","apply","arguments","host","username","password","account","port","https","connectionTested","succeeded","htmlFor","onChange","RouteWithSubRoutes","route","Route","render","assign","RouteConfig","HashRouter","pages_App_App","components_Heading_Heading","Switch","i","router_RouteWithSubRoutes","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","registerRouter","document","getElementById","URL","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1117fe66.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>AppTaco</title>\n        </Helmet>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Heading extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          AppTaco\n        </Link>\n        >\n        <Link className=\"nav-link\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"nav-link\" to=\"/share\">\n          Share\n        </Link>\n        <Link className=\"nav-link\" to=\"/config\">\n          Config\n        </Link>\n        <Link className=\"nav-link\" to=\"/\">\n          Help\n        </Link>\n      </nav>\n    )\n  }\n}\n\nexport default Heading\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst TacoItem = ({ name, id }) => (\n  <div className=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{name}</h5>\n      <p class=\"card-text\">Lorem ispum</p>\n    </div>\n    <div class=\"card-footer\">\n      <Link to={`/taco/${id}`} className=\"btn bn-primary\" >Deploy</Link>\n    </div>\n  </div>\n)\n\nclass TacoList extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n\n    componentDidMount() {\n      fetch(\"http://localhost:5656/api/v1/tacos\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.tacos\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (<div className=\"card-columns\">\n        {items.map(({ id, name }) => (\n          <TacoItem key={id} id={id} name={name} />\n        ))}\n      </div>)\n    }\n  }\n}\n\nexport default TacoList\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport TacoList from '../../components/TacoList/TacoList.js'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>AppTaco</title>\n        </Helmet>\n        <div className=\"jumbotron\">\n          <h1 className=\"display-5\">AppDynamics Configs, in Seconds</h1>\n          <p className=\"lead\">It is really cool</p>\n          <hr className=\"my-4\" />\n          <p className=\"lead\">Like sooo cool</p>\n        </div>\n        <div className=\"container\">\n          <div className=\"landing-searchbar input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n              aria-describedby=\"button-addon2\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                id=\"button-addon2\"\n              >\n                Search\n              </button>\n            </div>\n          </div>\n          <TacoList />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nconst fakeData = {\n  name: 'stuff',\n  version: '1.3',\n  tags: ['java', 'spring'],\n  authors: 'Einstein',\n  description: 'Lorem ipsum.....',\n  ingredients: [\n    {\n      type: 'btRules',\n      contents: 'JSON from Config exporter',\n      doc: 'This is a good config',\n    },\n    {\n      type: 'eum',\n      contents: 'JSON from Config exporter',\n      doc: 'This is the best config',\n    },\n  ],\n}\n\nclass TacoDetails extends Component {\n  render() {\n    const { match } = this.props\n    const { id } = match.params\n    console.log(id)\n\n    const { name, description, version, tags, authors, ingredients } = fakeData\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Taco</title>\n        </Helmet>\n        <div className=\"my-3\">\n          <h1 className=\"taco-details-title d-inline\">Taco</h1>\n          <Link to={`/taco/${id}/deploy/all`}>\n            <button className=\"btn btn-primary float-right\">Deploy Taco</button>\n          </Link>\n        </div>\n\n        <ul className=\"taco-details-info list-group\">\n          <li className=\"list-group-item\">\n            <b>Name:</b> {name}\n          </li>\n          {version ? (\n            <li className=\"list-group-item\">\n              <b>Version:</b> {version}\n            </li>\n          ) : null}\n          {tags ? (\n            <li className=\"list-group-item\">\n              <b>Tags:</b> {tags.join(', ')}\n            </li>\n          ) : null}\n          {authors ? (\n            <li className=\"list-group-item\">\n              <b>Authors: </b>\n              {authors}\n            </li>\n          ) : null}\n          {description ? (\n            <li className=\"list-group-item\">\n              <b>Description: </b>\n              {description}\n            </li>\n          ) : null}\n        </ul>\n        <div className=\"taco-details-description mt-4\">\n          <h4 className=\"mb-3\">Ingredients</h4>\n          <ul className=\"taco-details-ingredients list-group\">\n            {ingredients && ingredients.length\n              ? ingredients.map(({ type, doc }) => (\n                  <li key={type} className=\"list-group-item\">\n                    <b>{type}</b> - {doc}\n                    <Link to={`/taco/${id}/deploy/${type}`}>\n                      <button className=\"btn btn-secondary float-right\">\n                        Deploy Ingredient\n                      </button>\n                    </Link>\n                  </li>\n                ))\n              : null}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TacoDetails)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nclass Deploy extends Component {\n  state = {\n    deploying: false,\n    deployMsg: '',\n  }\n  deploy = async () => {\n    debugger // eslint-disable-line\n    this.setState({\n      deploying: true,\n      deployMsg: 'Deploying, not for real though LOL',\n    })\n    const response = await fetch(\n      `${process.env.REACT_APP_SERVER_URL}/api/stuff`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ post: { morestuff: 4 } }),\n      }\n    )\n    const body = await response.json()\n    console.log(body)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Deploy</title>\n        </Helmet>\n        <div className=\"my-3\">\n          <h1 className=\"taco-details-title\">Deploy Taco</h1>\n          <div>\n            No config entered yet. Add your controller details to{' '}\n            <Link to=\"/config\">Config</Link>\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.deploy}\n            disabled={false}\n          >\n            {this.state.deploying ? (\n              <div>\n                <div\n                  className=\"spinner-border spinner-border-sm mr-1\"\n                  role=\"status\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n                <span className=\"\">Deploying Dashboard</span>\n              </div>\n            ) : (\n              <div>Deploy Dashboard</div>\n            )}\n          </button>\n          <div>{this.state.deployMsg}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Deploy\n","import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Share</title>\n        </Helmet>\n        <div className=\"mt-3\">\n          <h1>Share</h1>\n          <div className=\"card bg-light my-4\">\n            <div className=\"card-body\">\n              <p className=\"card-text\">\n                Everyone loves more tacos! We would really appreciate your help\n                in creating a library of more tacos.\n              </p>\n            </div>\n          </div>\n          <h3 className=\"mb-3\">3 Steps to Taco Fame</h3>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n              1. Use{' '}\n              <a href=\"https://singularity.jira.com/wiki/spaces/CS/pages/107413539/Config+Exporter\">\n                Config Exporter\n              </a>{' '}\n              to export your config JSONs\n            </li>\n            <li className=\"list-group-item\">2. Export dashboards JSONs</li>\n            <li className=\"list-group-item\">\n              3. Zip it up and send us an email at{' '}\n              <a href=\"mailto:apptaco@appdynamics.com\">\n                apptaco@appdynamics.com\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>About AppTaco</title>\n        </Helmet>\n        <h1>About</h1>\n        <div>\n          <p>\n          AppDynamics Configs, in Seconds\n          </p>\n          <p>\n            Learn more about it at the{' '}\n            <a href=\"https://github.com/sys13/apptaco\">\n              GitHub repository\n            </a>.\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n","import Landing from './pages/Landing/Landing'\nimport TacoDetails from './pages/TacoDetails/TacoDetails'\nimport Deploy from './pages/Deploy/Deploy'\nimport Share from './pages/Share/Share'\nimport About from './pages/About/About'\nimport Config from './pages/Config/Config'\n\nexport default [\n  // landing\n  { path: '/', component: Landing, exact: true },\n  // taco\n  { path: '/taco/:id', component: TacoDetails, exact: true },\n  // share\n  { path: '/share', component: Share, exact: true },\n  // deploy\n  { path: '/taco/:id/deploy/:deployScope', component: Deploy, exact: true },\n  // config\n  { path: '/config', component: Config, exact: true },\n  // about\n  { path: '/about', component: About, exact: true },\n]\n","import React, { Component } from 'react'\nimport Cookies from 'js-cookie'\n// import { Link } from 'react-router-dom'\n\nexport default class Config extends Component {\n  constructor() {\n    super()\n    const cookie = Cookies.get('controllerConfig')\n    const { host, username, password, account, port, https } =\n      (cookie && JSON.parse(cookie)) || {}\n\n    this.state = {\n      host,\n      username,\n      password,\n      account,\n      port,\n      https,\n      connectionTested: false,\n    }\n  }\n  onSubmit = () => {}\n  handleInputChange = event => {\n    const { target } = event\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const { name } = target\n    const cookie =\n      Cookies.get('controllerConfig') &&\n      JSON.parse(Cookies.get('controllerConfig'))\n    const newCookieVal = { ...cookie, [name]: value }\n\n    Cookies.set('controllerConfig', JSON.stringify(newCookieVal))\n\n    this.setState({ [name]: value, connectionTested: false })\n  }\n  onTestConnection = async event => {\n    event.preventDefault()\n\n    const config =\n      Cookies.get('controllerConfig') &&\n      JSON.parse(Cookies.get('controllerConfig'))\n    console.log(config)\n\n    // testConnection({ config }).then(({ succeeded }) => {\n    //   this.setState({\n    //     succeeded,\n    //     connectionTested: true,\n    //   })\n    // })\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-4\">\n          <h1>Configuration</h1>\n          <div className=\"my-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onTestConnection}\n            >\n              Test Connection\n            </button>\n          </div>\n          <div>\n            {this.state.connectionTested && this.state.succeeded ? (\n              <span className=\"text-success\">Connection succeeded!</span>\n            ) : null}\n            {this.state.connectionTested && !this.state.succeeded ? (\n              <span className=\"text-danger\">Connection failed</span>\n            ) : null}\n          </div>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"hostInput\">Controller Host</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"host\"\n                id=\"hostInput\"\n                placeholder=\"Controller hostname ex: mycompany.saas.appdynamics.com\"\n                onChange={this.handleInputChange}\n                value={this.state.host}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Please don't add 'http://' or 'https://'. Example:\n                mycompany.saas.appdynamics.com\n              </small>\n            </div>\n            <div className=\"form-check mb-3\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={this.handleInputChange}\n                checked={this.state.https}\n                value={this.state.https}\n                name=\"https\"\n                id=\"httpsInput\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"httpsInput\">\n                HTTPS\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"accountInput\">Account</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"account\"\n                id=\"accountInput\"\n                placeholder=\"Account\"\n                onChange={this.handleInputChange}\n                value={this.state.account}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Default account name is customer1\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"usernameInput\">Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                id=\"usernameInput\"\n                placeholder=\"Username\"\n                onChange={this.handleInputChange}\n                value={this.state.username}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"passwordInput\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                id=\"passwordInput\"\n                placeholder=\"Password\"\n                onChange={this.handleInputChange}\n                value={this.state.password}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Note: Password is stored in plain-text on your computer\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"portInput\">Port (optional)</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"port\"\n                id=\"portInput\"\n                placeholder=\"Port\"\n                onChange={this.handleInputChange}\n                value={this.state.port}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Default is port 80. Only need to set this for on-prem\n                controllers\n              </small>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport App from './pages/App/App'\nimport Heading from './components/Heading/Heading'\nimport routes from './routes'\n\n// wrap <Route> and use this everywhere instead, then when\n// sub routes are added to any route it'll work\nconst RouteWithSubRoutes = route => (\n  <Route\n    path={route.path}\n    exact={route.exact}\n    render={props => (\n      // pass the sub-routes down  to keep nesting\n      <route.component {...props} routes={route.routes} />\n    )}\n  />\n)\n\nconst RouteConfig = () => (\n  <Router>\n    <App>\n      <Heading />\n      <Switch>\n        {routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)}\n      </Switch>\n    </App>\n  </Router>\n)\n\nexport default RouteConfig\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap'\nimport registerRouter from './router'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(registerRouter(), document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}