{"version":3,"sources":["pages/App/App.js","components/Heading/Heading.js","pages/Landing/Landing.js","pages/TacoDetails/TacoDetails.js","pages/Deploy/Deploy.js","pages/Share/Share.js","pages/About/About.js","routes.js","pages/Config/Config.js","router.js","registerServiceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Helmet","charSet","this","props","children","Component","Heading","Link","to","TacoItem","_ref","name","id","concat","sampleList","Landing","type","placeholder","aria-label","aria-describedby","map","_ref2","Landing_TacoItem","key","fakeData","contents","doc","TacoDetails","match","params","console","log","description","version","tags","authors","ingredients","join","length","withRouter","Deploy","state","deploying","deployMsg","deploy","_callee","response","body","regenerator_default","wrap","_context","prev","next","_this","setState","fetch","method","headers","Content-Type","JSON","stringify","post","morestuff","sent","json","stop","onClick","disabled","role","href","About","routes","path","component","exact","Share","Config","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","handleInputChange","event","_this$setState","target","value","checked","cookie","Cookies","get","parse","newCookieVal","objectSpread","defineProperty","set","onTestConnection","asyncToGenerator","mark","config","preventDefault","_x","apply","arguments","host","username","password","account","port","https","connectionTested","succeeded","htmlFor","onChange","RouteWithSubRoutes","route","Route","render","assign","RouteConfig","HashRouter","pages_App_App","components_Heading_Heading","Switch","i","router_RouteWithSubRoutes","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","registerRouter","document","getElementById","URL","process","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oSAkBeA,0LAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,QAAMG,QAAQ,UACdL,EAAAC,EAAAC,cAAA,yBAEDI,KAAKC,MAAMC,iBARFC,sBCwBHC,mLAvBX,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,eAAeS,GAAG,KAAlC,WADF,IAKEZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,WAAWS,GAAG,KAA9B,QAGAZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,WAAWS,GAAG,UAA9B,SAGAZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,WAAWS,GAAG,WAA9B,UAGAZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAU,WAAWS,GAAG,KAA9B,gBAjBcH,aCChBI,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,GAAT,OACfhB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,SAAAK,OAAWD,GAAMb,UAAU,0CAChCY,IAICG,EAAa,CACjB,CAAEF,GAAI,IAAKD,KAAM,OACjB,CAAEC,GAAI,IAAKD,KAAM,OACjB,CAAEC,GAAI,IAAKD,KAAM,QA8CJI,mLAzCX,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,eACVkB,YAAY,SACZC,aAAW,SACXC,mBAAiB,kBAEnBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACViB,KAAK,SACLJ,GAAG,iBAHL,YASJhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZe,EAAWM,IAAI,SAAAC,GAAA,IAAGT,EAAHS,EAAGT,GAAID,EAAPU,EAAOV,KAAP,OACdf,EAAAC,EAAAC,cAACwB,EAAD,CAAUC,IAAKX,EAAIA,GAAIA,EAAID,KAAMA,gBAlCzBN,qBCZhBmB,EACE,QADFA,EAEK,MAFLA,EAGE,CAAC,OAAQ,UAHXA,EAIK,WAJLA,EAKS,mBALTA,EAMS,CACX,CACER,KAAM,UACNS,SAAU,4BACVC,IAAK,yBAEP,CACEV,KAAM,MACNS,SAAU,4BACVC,IAAK,4BAKLC,mLACK,IAECf,EADUV,KAAKC,MAAfyB,MACaC,OAAbjB,GACRkB,QAAQC,IAAInB,GAHL,IAKCD,EAA2Da,EAArDQ,EAAqDR,EAAxCS,EAAwCT,EAA/BU,EAA+BV,EAAzBW,EAAyBX,EAAhBY,EAAgBZ,EACnE,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,gCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,QACAH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,SAAAK,OAAWD,EAAX,gBACNhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,iBAIJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,kBADF,IACgBa,GAEfsB,EACCrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,qBADF,IACmBmC,GAEjB,KACHC,EACCtC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,kBADF,IACgBoC,EAAKG,KAAK,OAExB,KACHF,EACCvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,sBACCqC,GAED,KACHH,EACCpC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,0BACCkC,GAED,MAENpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCACXqC,GAAeA,EAAYE,OACxBF,EAAYhB,IAAI,SAAAV,GAAA,IAAGM,EAAHN,EAAGM,KAAMU,EAAThB,EAASgB,IAAT,OACd9B,EAAAC,EAAAC,cAAA,MAAIyB,IAAKP,EAAMjB,UAAU,mBACvBH,EAAAC,EAAAC,cAAA,SAAIkB,GADN,MACmBU,EACjB9B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,SAAAK,OAAWD,EAAX,YAAAC,OAAwBG,IAC9BpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCAAlB,yBAMN,eA5DUM,aAoEXkC,cAAWZ,4BC7BXa,6MA1DbC,MAAQ,CACNC,WAAW,EACXC,UAAW,MAEbC,4BAAS,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPC,EAAKC,SAAS,CACZZ,WAAW,EACXC,UAAW,uCAHNO,EAAAE,KAAA,EAKgBG,MAAM,aAAc,CACzCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBX,KAAMY,KAAKC,UAAU,CAAEC,KAAM,CAAEC,UAAW,OAVrC,cAKDhB,EALCI,EAAAa,KAAAb,EAAAE,KAAA,EAYYN,EAASkB,OAZrB,OAYDjB,EAZCG,EAAAa,KAaPjC,QAAQC,IAAIgB,GAbL,wBAAAG,EAAAe,SAAApB,EAAA3C,iFAgBP,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,eACAH,EAAAC,EAAAC,cAAA,mEACwD,IACtDF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,WAAT,WAEFZ,EAAAC,EAAAC,cAAA,UACEkB,KAAK,SACLjB,UAAU,kBACVmE,QAAShE,KAAK0C,OACduB,UAAU,GAETjE,KAAKuC,MAAMC,UACV9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEC,UAAU,wCACVqE,KAAK,UAELxE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAEFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,IAAhB,wBAGFH,EAAAC,EAAAC,cAAA,gCAGJF,EAAAC,EAAAC,cAAA,WAAMI,KAAKuC,MAAME,oBApDNtC,aCwCNU,mLAtCX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,0GAMJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,wBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,SACS,IACPH,EAAAC,EAAAC,cAAA,KAAGuE,KAAK,+EAAR,mBAEK,IAJP,+BAOAzE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,8BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,uCACuC,IACrCH,EAAAC,EAAAC,cAAA,KAAGuE,KAAK,kCAAR,sCA7BQhE,aCuBPiE,mLAtBX,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACEJ,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4CAGAF,EAAAC,EAAAC,cAAA,sCAC6B,IAC3BF,EAAAC,EAAAC,cAAA,KAAGuE,KAAK,oCAAR,qBAFF,cAZUhE,8CCILkE,EAAA,CAEb,CAAEC,KAAM,IAAKC,UAAW1D,EAAS2D,OAAO,GAExC,CAAEF,KAAM,YAAaC,UAAW9C,EAAa+C,OAAO,GAEpD,CAAEF,KAAM,SAAUC,UAAWE,EAAOD,OAAO,GAE3C,CAAEF,KAAM,gCAAiCC,UAAWjC,EAAQkC,OAAO,GAEnE,CAAEF,KAAM,UAAWC,sBCZnB,SAAAG,IAAc,IAAAvB,EAAAwB,OAAAC,EAAA,EAAAD,CAAA3E,KAAA0E,IACZvB,EAAAwB,OAAAE,EAAA,EAAAF,CAAA3E,KAAA2E,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/E,QAeFgF,SAAW,aAhBG7B,EAiBd8B,kBAAoB,SAAAC,GAAS,IAAAC,EACnBC,EAAWF,EAAXE,OACFC,EAAwB,aAAhBD,EAAOtE,KAAsBsE,EAAOE,QAAUF,EAAOC,MAC3D5E,EAAS2E,EAAT3E,KACF8E,EACJC,IAAQC,IAAI,qBACZhC,KAAKiC,MAAMF,IAAQC,IAAI,qBACnBE,EAAYhB,OAAAiB,EAAA,EAAAjB,CAAA,GAAQY,EAARZ,OAAAkB,EAAA,EAAAlB,CAAA,GAAiBlE,EAAO4E,IAE1CG,IAAQM,IAAI,mBAAoBrC,KAAKC,UAAUiC,IAE/CxC,EAAKC,UAAL+B,EAAA,GAAAR,OAAAkB,EAAA,EAAAlB,CAAAQ,EAAiB1E,EAAO4E,GAAxBV,OAAAkB,EAAA,EAAAlB,CAAAQ,EAAA,oBAAiD,GAAjDA,KA5BYhC,EA8Bd4C,iBA9Bc,eAAAvF,EAAAmE,OAAAqB,EAAA,EAAArB,CAAA7B,EAAAnD,EAAAsG,KA8BK,SAAAtD,EAAMuC,GAAN,IAAAgB,EAAA,OAAApD,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjBgC,EAAMiB,iBAEAD,EACJV,IAAQC,IAAI,qBACZhC,KAAKiC,MAAMF,IAAQC,IAAI,qBACzB7D,QAAQC,IAAIqE,GANK,wBAAAlD,EAAAe,SAAApB,EAAA3C,SA9BL,gBAAAoG,GAAA,OAAA5F,EAAA6F,MAAArG,KAAAsG,YAAA,GAEZ,IAAMf,EAASC,IAAQC,IAAI,oBAFftE,EAIToE,GAAU9B,KAAKiC,MAAMH,IAAY,GAD5BgB,EAHIpF,EAGJoF,KAAMC,EAHFrF,EAGEqF,SAAUC,EAHZtF,EAGYsF,SAAUC,EAHtBvF,EAGsBuF,QAASC,EAH/BxF,EAG+BwF,KAAMC,EAHrCzF,EAGqCyF,MAHrC,OAMZzD,EAAKZ,MAAQ,CACXgE,OACAC,WACAC,WACAC,UACAC,OACAC,QACAC,kBAAkB,GAbR1D,wEA8CZ,OACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UACEkB,KAAK,SACLjB,UAAU,kBACVmE,QAAShE,KAAK+F,kBAHhB,oBAQFrG,EAAAC,EAAAC,cAAA,WACGI,KAAKuC,MAAMsE,kBAAoB7G,KAAKuC,MAAMuE,UACzCpH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,yBACE,KACHG,KAAKuC,MAAMsE,mBAAqB7G,KAAKuC,MAAMuE,UAC1CpH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,qBACE,MAENH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,aAAf,mBACArH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,eACVY,KAAK,OACLC,GAAG,YACHK,YAAY,yDACZiG,SAAUhH,KAAKiF,kBACfI,MAAOrF,KAAKuC,MAAMgE,OAEpB7G,EAAAC,EAAAC,cAAA,SAAOc,GAAG,YAAYb,UAAU,wBAAhC,sFAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACViB,KAAK,WACLkG,SAAUhH,KAAKiF,kBACfK,QAAStF,KAAKuC,MAAMqE,MACpBvB,MAAOrF,KAAKuC,MAAMqE,MAClBnG,KAAK,QACLC,GAAG,eAELhB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBkH,QAAQ,cAA5C,UAIFrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,gBAAf,WACArH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,eACVY,KAAK,UACLC,GAAG,eACHK,YAAY,UACZiG,SAAUhH,KAAKiF,kBACfI,MAAOrF,KAAKuC,MAAMmE,UAEpBhH,EAAAC,EAAAC,cAAA,SAAOc,GAAG,YAAYb,UAAU,wBAAhC,sCAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,iBAAf,YACArH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,eACVY,KAAK,WACLC,GAAG,gBACHK,YAAY,WACZiG,SAAUhH,KAAKiF,kBACfI,MAAOrF,KAAKuC,MAAMiE,YAGtB9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,iBAAf,YACArH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,WACLjB,UAAU,eACVY,KAAK,WACLC,GAAG,gBACHK,YAAY,WACZiG,SAAUhH,KAAKiF,kBACfI,MAAOrF,KAAKuC,MAAMkE,WAEpB/G,EAAAC,EAAAC,cAAA,SAAOc,GAAG,YAAYb,UAAU,wBAAhC,4DAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOmH,QAAQ,aAAf,mBACArH,EAAAC,EAAAC,cAAA,SACEkB,KAAK,OACLjB,UAAU,eACVY,KAAK,OACLC,GAAG,YACHK,YAAY,OACZiG,SAAUhH,KAAKiF,kBACfI,MAAOrF,KAAKuC,MAAMoE,OAEpBjH,EAAAC,EAAAC,cAAA,SAAOc,GAAG,YAAYb,UAAU,wBAAhC,gFAxJsBM,aDaIqE,OAAO,GAE7C,CAAEF,KAAM,SAAUC,UAAWH,EAAOI,OAAO,IEXvCyC,EAAqB,SAAAC,GAAK,OAC9BxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CACE7C,KAAM4C,EAAM5C,KACZE,MAAO0C,EAAM1C,MACb4C,OAAQ,SAAAnH,GAAK,OAEXP,EAAAC,EAAAC,cAACsH,EAAM3C,UAAPI,OAAA0C,OAAA,GAAqBpH,EAArB,CAA4BoE,OAAQ6C,EAAM7C,cAgBjCiD,EAXK,kBAClB5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAC4H,EAAD,KACE9H,EAAAC,EAAAC,cAAC6H,EAAD,MACA/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACGrD,EAAOnD,IAAI,SAACgG,EAAOS,GAAR,OAAcjI,EAAAC,EAAAC,cAACgI,EAADjD,OAAA0C,OAAA,CAAoBhG,IAAKsG,GAAOT,UCd5DW,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvG,MACvB,2DA6BN,SAASwG,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnG,QACf6F,UAAUC,cAAcQ,WAK1BjH,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBiH,MAAM,SAAAC,GACLnH,QAAQmH,MAAM,4CAA6CA,KChEjEC,IAAS5B,OAAO6B,IAAkBC,SAASC,eAAe,SDc3C,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,WAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAxH,OAAM0I,WAAN,sBAENxB,EAwCX,SAAiCM,GAE/B9E,MAAM8E,GACHI,KAAK,SAAA3F,GAGkB,MAApBA,EAAS4G,SACuD,IAAhE5G,EAASW,QAAQkC,IAAI,gBAAgBgE,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMnB,KAAK,SAAAC,GACjCA,EAAamB,aAAapB,KAAK,WAC7BR,OAAOC,SAAS4B,aAKpB1B,EAAgBC,KAGnBW,MAAM,WACLlH,QAAQC,IACN,mEAzDAgI,CAAwB1B,GAHxBD,EAAgBC,MC7BxB2B","file":"static/js/main.68161754.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>AppTaco</title>\n        </Helmet>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Heading extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          AppTaco\n        </Link>\n        >\n        <Link className=\"nav-link\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"nav-link\" to=\"/share\">\n          Share\n        </Link>\n        <Link className=\"nav-link\" to=\"/config\">\n          Config\n        </Link>\n        <Link className=\"nav-link\" to=\"/\">\n          Help\n        </Link>\n      </nav>\n    )\n  }\n}\n\nexport default Heading\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nconst TacoItem = ({ name, id }) => (\n  <Link to={`/taco/${id}`} className=\"list-group-item list-group-item-action\">\n    {name}\n  </Link>\n)\n\nconst sampleList = [\n  { id: '1', name: 'foo' },\n  { id: '2', name: 'bar' },\n  { id: '3', name: 'baz' },\n]\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>AppTaco</title>\n        </Helmet>\n        <div className=\"jumbotron\">\n          <h1 className=\"display-5\">AppDynamics Configs, in Seconds</h1>\n          <p className=\"lead\">It is really cool</p>\n          <hr className=\"my-4\" />\n          <p className=\"lead\">Like sooo cool</p>\n        </div>\n        <div className=\"container\">\n          <div className=\"landing-searchbar input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n              aria-describedby=\"button-addon2\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                id=\"button-addon2\"\n              >\n                Search\n              </button>\n            </div>\n          </div>\n          <div className=\"list-group\">\n            {sampleList.map(({ id, name }) => (\n              <TacoItem key={id} id={id} name={name} />\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nconst fakeData = {\n  name: 'stuff',\n  version: '1.3',\n  tags: ['java', 'spring'],\n  authors: 'Einstein',\n  description: 'Lorem ipsum.....',\n  ingredients: [\n    {\n      type: 'btRules',\n      contents: 'JSON from Config exporter',\n      doc: 'This is a good config',\n    },\n    {\n      type: 'eum',\n      contents: 'JSON from Config exporter',\n      doc: 'This is the best config',\n    },\n  ],\n}\n\nclass TacoDetails extends Component {\n  render() {\n    const { match } = this.props\n    const { id } = match.params\n    console.log(id)\n\n    const { name, description, version, tags, authors, ingredients } = fakeData\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Taco</title>\n        </Helmet>\n        <div className=\"my-3\">\n          <h1 className=\"taco-details-title d-inline\">Taco</h1>\n          <Link to={`/taco/${id}/deploy/all`}>\n            <button className=\"btn btn-primary float-right\">Deploy Taco</button>\n          </Link>\n        </div>\n\n        <ul className=\"taco-details-info list-group\">\n          <li className=\"list-group-item\">\n            <b>Name:</b> {name}\n          </li>\n          {version ? (\n            <li className=\"list-group-item\">\n              <b>Version:</b> {version}\n            </li>\n          ) : null}\n          {tags ? (\n            <li className=\"list-group-item\">\n              <b>Tags:</b> {tags.join(', ')}\n            </li>\n          ) : null}\n          {authors ? (\n            <li className=\"list-group-item\">\n              <b>Authors: </b>\n              {authors}\n            </li>\n          ) : null}\n          {description ? (\n            <li className=\"list-group-item\">\n              <b>Description: </b>\n              {description}\n            </li>\n          ) : null}\n        </ul>\n        <div className=\"taco-details-description mt-4\">\n          <h4 className=\"mb-3\">Ingredients</h4>\n          <ul className=\"taco-details-ingredients list-group\">\n            {ingredients && ingredients.length\n              ? ingredients.map(({ type, doc }) => (\n                  <li key={type} className=\"list-group-item\">\n                    <b>{type}</b> - {doc}\n                    <Link to={`/taco/${id}/deploy/${type}`}>\n                      <button className=\"btn btn-secondary float-right\">\n                        Deploy Ingredient\n                      </button>\n                    </Link>\n                  </li>\n                ))\n              : null}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(TacoDetails)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nclass Deploy extends Component {\n  state = {\n    deploying: false,\n    deployMsg: '',\n  }\n  deploy = async () => {\n    this.setState({\n      deploying: true,\n      deployMsg: 'Deploying, not for real though LOL',\n    })\n    const response = await fetch('/api/stuff', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: { morestuff: 4 } }),\n    })\n    const body = await response.json()\n    console.log(body)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Deploy</title>\n        </Helmet>\n        <div className=\"my-3\">\n          <h1 className=\"taco-details-title\">Deploy Taco</h1>\n          <div>\n            No config entered yet. Add your controller details to{' '}\n            <Link to=\"/config\">Config</Link>\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.deploy}\n            disabled={false}\n          >\n            {this.state.deploying ? (\n              <div>\n                <div\n                  className=\"spinner-border spinner-border-sm mr-1\"\n                  role=\"status\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n                <span className=\"\">Deploying Dashboard</span>\n              </div>\n            ) : (\n              <div>Deploy Dashboard</div>\n            )}\n          </button>\n          <div>{this.state.deployMsg}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Deploy\n","import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>AppTaco - Share</title>\n        </Helmet>\n        <div className=\"mt-3\">\n          <h1>Share</h1>\n          <div className=\"card bg-light my-4\">\n            <div className=\"card-body\">\n              <p className=\"card-text\">\n                Everyone loves more tacos! We would really appreciate your help\n                in creating a library of more tacos.\n              </p>\n            </div>\n          </div>\n          <h3 className=\"mb-3\">3 Steps to Taco Fame</h3>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n              1. Use{' '}\n              <a href=\"https://singularity.jira.com/wiki/spaces/CS/pages/107413539/Config+Exporter\">\n                Config Exporter\n              </a>{' '}\n              to export your config JSONs\n            </li>\n            <li className=\"list-group-item\">2. Export dashboards JSONs</li>\n            <li className=\"list-group-item\">\n              3. Zip it up and send us an email at{' '}\n              <a href=\"mailto:apptaco@appdynamics.com\">\n                apptaco@appdynamics.com\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Helmet>\n          <title>About AppTaco</title>\n        </Helmet>\n        <h1>About</h1>\n        <div>\n          <p>\n          AppDynamics Configs, in Seconds\n          </p>\n          <p>\n            Learn more about it at the{' '}\n            <a href=\"https://github.com/sys13/apptaco\">\n              GitHub repository\n            </a>.\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About\n","import Landing from './pages/Landing/Landing'\nimport TacoDetails from './pages/TacoDetails/TacoDetails'\nimport Deploy from './pages/Deploy/Deploy'\nimport Share from './pages/Share/Share'\nimport About from './pages/About/About'\nimport Config from './pages/Config/Config'\n\nexport default [\n  // landing\n  { path: '/', component: Landing, exact: true },\n  // taco\n  { path: '/taco/:id', component: TacoDetails, exact: true },\n  // share\n  { path: '/share', component: Share, exact: true },\n  // deploy\n  { path: '/taco/:id/deploy/:deployScope', component: Deploy, exact: true },\n  // config\n  { path: '/config', component: Config, exact: true },\n  // about\n  { path: '/about', component: About, exact: true },\n]\n","import React, { Component } from 'react'\nimport Cookies from 'js-cookie'\n// import { Link } from 'react-router-dom'\n\nexport default class Config extends Component {\n  constructor() {\n    super()\n    const cookie = Cookies.get('controllerConfig')\n    const { host, username, password, account, port, https } =\n      (cookie && JSON.parse(cookie)) || {}\n\n    this.state = {\n      host,\n      username,\n      password,\n      account,\n      port,\n      https,\n      connectionTested: false,\n    }\n  }\n  onSubmit = () => {}\n  handleInputChange = event => {\n    const { target } = event\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const { name } = target\n    const cookie =\n      Cookies.get('controllerConfig') &&\n      JSON.parse(Cookies.get('controllerConfig'))\n    const newCookieVal = { ...cookie, [name]: value }\n\n    Cookies.set('controllerConfig', JSON.stringify(newCookieVal))\n\n    this.setState({ [name]: value, connectionTested: false })\n  }\n  onTestConnection = async event => {\n    event.preventDefault()\n\n    const config =\n      Cookies.get('controllerConfig') &&\n      JSON.parse(Cookies.get('controllerConfig'))\n    console.log(config)\n\n    // testConnection({ config }).then(({ succeeded }) => {\n    //   this.setState({\n    //     succeeded,\n    //     connectionTested: true,\n    //   })\n    // })\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-4\">\n          <h1>Configuration</h1>\n          <div className=\"my-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onTestConnection}\n            >\n              Test Connection\n            </button>\n          </div>\n          <div>\n            {this.state.connectionTested && this.state.succeeded ? (\n              <span className=\"text-success\">Connection succeeded!</span>\n            ) : null}\n            {this.state.connectionTested && !this.state.succeeded ? (\n              <span className=\"text-danger\">Connection failed</span>\n            ) : null}\n          </div>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"hostInput\">Controller Host</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"host\"\n                id=\"hostInput\"\n                placeholder=\"Controller hostname ex: mycompany.saas.appdynamics.com\"\n                onChange={this.handleInputChange}\n                value={this.state.host}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Please don't add 'http://' or 'https://'. Example:\n                mycompany.saas.appdynamics.com\n              </small>\n            </div>\n            <div className=\"form-check mb-3\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={this.handleInputChange}\n                checked={this.state.https}\n                value={this.state.https}\n                name=\"https\"\n                id=\"httpsInput\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"httpsInput\">\n                HTTPS\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"accountInput\">Account</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"account\"\n                id=\"accountInput\"\n                placeholder=\"Account\"\n                onChange={this.handleInputChange}\n                value={this.state.account}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Default account name is customer1\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"usernameInput\">Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                id=\"usernameInput\"\n                placeholder=\"Username\"\n                onChange={this.handleInputChange}\n                value={this.state.username}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"passwordInput\">Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                id=\"passwordInput\"\n                placeholder=\"Password\"\n                onChange={this.handleInputChange}\n                value={this.state.password}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Note: Password is stored in plain-text on your computer\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"portInput\">Port (optional)</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"port\"\n                id=\"portInput\"\n                placeholder=\"Port\"\n                onChange={this.handleInputChange}\n                value={this.state.port}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\n                Default is port 80. Only need to set this for on-prem\n                controllers\n              </small>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport App from './pages/App/App'\nimport Heading from './components/Heading/Heading'\nimport routes from './routes'\n\n// wrap <Route> and use this everywhere instead, then when\n// sub routes are added to any route it'll work\nconst RouteWithSubRoutes = route => (\n  <Route\n    path={route.path}\n    exact={route.exact}\n    render={props => (\n      // pass the sub-routes down  to keep nesting\n      <route.component {...props} routes={route.routes} />\n    )}\n  />\n)\n\nconst RouteConfig = () => (\n  <Router>\n    <App>\n      <Heading />\n      <Switch>\n        {routes.map((route, i) => <RouteWithSubRoutes key={i} {...route} />)}\n      </Switch>\n    </App>\n  </Router>\n)\n\nexport default RouteConfig\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport 'bootstrap'\nimport registerRouter from './router'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(registerRouter(), document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}